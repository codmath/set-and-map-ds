void helper(int index, vector<vector<int>> &ans, vector<int>&temp, int target, vector<int>&candidates){
        //base case
        if(index==candidates.size()){
            if(target==0){
                ans.push_back(temp);
            }
            return;
        }
        if(candidates[index]<=target){
        temp.push_back(candidates[index]);
        helper(index, ans,  temp, target-candidates[index], candidates);
        temp.pop_back();
        }
        helper(index+1, ans, temp, target, candidates);
        
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> temp;
        vector<vector<int>> ans;
        helper(0, ans, temp, target, candidates);
        return ans;
        
    }
